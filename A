Arrays and Hashing
Introduction to Arrays
Array is a fundamental data structure used in programming for storing a collection of elements of the same type in contiguous memory locations. It provides a convenient way to organize and access data.

Example
Suppose we want to store the scores of students in a class. We can use an array to hold these scores. Let's declare an array named scores to store the scores:

In Python:
scores = [0, 0, 0, 0, 0] # Declares a list named "scores" initialized with 5 zeros

Arrays in Go are fixed-size sequences of elements of the same type. They provide a way to store multiple elements of the same type under a single name.

Example
Suppose we want to store the scores of students in a class. We can use an array to hold these scores. Let's declare an array named scores to store the scores:
var scores [5]int // Declares an array named "scores" capable of holding 5 integer values
You can access individual elements of the array using their indices..

Introduction to Hashing
Hashing is a technique used in computer science to map data of arbitrary size to fixed-size values. It is commonly used for data retrieval and storage. A hash function is a mathematical function that converts an input into a fixed-size value called a hash code or hash value.

Example
Suppose we have a list of student names and we want to store their scores in a data structure for quick access. We can use hashing to achieve this.

# Define a hash table to store scores by student name
scores = {}

# Function to add a score for a student
def add_score(name, score):
    # Calculate hash code for the name
    hash_code = hash(name)
    
    # Store the score in the hash table
    scores[hash_code] = score

# Function to retrieve the score for a student
def get_score(name):
    # Calculate hash code for the name
    hash_code = hash(name)
    
    # Retrieve the score from the hash table
    score = scores.get(hash_code)
    return score

# Add scores for students
add_score("Alice", 85)
add_score("Bob", 90)
add_score("Charlie", 75)
add_score("David", 95)
add_score("Eve", 80)

# Retrieve scores for students
print("Score for Alice:", get_score("Alice"))
print("Score for Bob:", get_score("Bob"))
print("Score for Charlie:", get_score("Charlie"))
print("Score for David:", get_score("David"))
print("Score for Eve:", get_score("Eve"))


